services:
  backend:
    network_mode: "host"
    build:
      context: ./backend-foodia
      dockerfile: Dockerfile.backend
    container_name: foodia_backend
    ports:
      - "4000:4000" # Mapea el puerto del backend
    volumes:
      - ./backend-foodia:/usr/src/app # Sincronización de archivos locales
    env_file:
      - ./backend-foodia/.env # Utiliza las variables de entorno desde .env
    environment:
      MONGODB_URL: ${MONGODB_URL} # Usa las variables de entorno desde .env
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - mongo # Asegúrate de que MongoDB esté disponible antes de iniciar el backend

  frontend:
    build:
      context: ./front-foodia
      dockerfile: Dockerfile.frontend
    container_name: foodia_frontend
    ports:
      - "8081:8081" # Mapea el puerto de Expo
    volumes:
      - ./front-foodia:/usr/src/app # Sincronización de archivos locales
    env_file:
      - ./front-foodia/.env # Utiliza las variables de entorno desde .env
    environment:
      REACT_NATIVE_PACKAGER_HOSTNAME: ${REACT_NATIVE_PACKAGER_HOSTNAME} # IP local para Expo
      API_URL: ${API_URL} # URL de la API del backend
    stdin_open: true
    tty: true
    depends_on:
      - backend # Asegúrate de que el backend esté funcionando

  mongo:
    image: mongo
    container_name: foodia_mongo
    ports:
      - "27017:27017" # Puerto de MongoDB
    volumes:
      - mongo_data:/data/db # Persistencia de datos

volumes:
  mongo_data:
